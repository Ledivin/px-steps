{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "### Usage\n\n    <px-steps items='[{ id: \"1\", label: \"Select Services\"},{ id: \"2\", label: \"Billing\"}]'></px-steps>\n\n### Styling\n\nThe following custom properties are available for styling (shown with their corresponding default values):\n\nCustom property | Description\n:----------------|:-------------\n`--px-steps-connector-color` | Color for the connecting lines / bubbles\n`--px-steps-text-color` | Default text color for uncompleted and inactive steps\n`--px-steps-text-color--hover` | Text color for steps when hovered\n`--px-steps-text-color--pressed` | Text color for steps when pressed\n`--px-steps-text-color--current` | Text color for the current highlighted step\n`--px-steps-text-color--completed` | Text color for the completed steps\n`--px-steps-min-width` | Minimum width of each step in the stepper",
      "summary": "",
      "path": "px-steps.html",
      "properties": [
        {
          "name": "items",
          "type": "Array",
          "description": "An array of steps and their details. If empty, the component is not rendered.\nThe structure should be:\n\n     [{ id: String, label: String }, ... ]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateItems\""
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "completed",
          "type": "Array",
          "description": "An array of IDs corresponding to items in the steps array which\nshould be marked as completed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "currentStep",
          "type": "number",
          "description": "The array index of the currently active step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "0"
        }
      ],
      "methods": [
        {
          "name": "complete",
          "description": "Sets the current step to complete and advances to the next step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "next",
          "description": "Go forward one step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "previous",
          "description": "Go back one step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "jumpToStep",
          "description": "Jump to an arbitrary step by index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_getIcon",
          "description": "Calculates which icon to display for a given node.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "completed"
            }
          ]
        },
        {
          "name": "_getStepState",
          "description": "Calculates which class to assign to a given node.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "index"
            },
            {
              "name": "currentStep"
            },
            {
              "name": "completed"
            }
          ]
        },
        {
          "name": "_handleTap",
          "description": "Fires an event when a node is tapped upon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_updateItems",
          "description": "Handles updates to the items array by un-assigning and re-assigning\nthe value to trigger the dom-repeat to re-render.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 48,
          "column": 12
        },
        "end": {
          "line": 184,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "items",
          "description": "An array of steps and their details. If empty, the component is not rendered.\nThe structure should be:\n\n     [{ id: String, label: String }, ... ]",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "completed",
          "description": "An array of IDs corresponding to items in the steps array which\nshould be marked as completed.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "current-step",
          "description": "The array index of the currently active step.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "px-steps-tapped",
          "description": "px-steps-tapped",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-steps"
    }
  ]
}
